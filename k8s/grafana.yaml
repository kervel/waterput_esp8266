apiVersion: v1
stringData:
  GF_SECURITY_ADMIN_USER: admin
  GF_SECURITY_ADMIN_PASSWORD: frank-iot
kind: Secret
metadata:
  name: grafana-creds
  namespace: frank-iot
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: frank-iot
  generation: 1
  labels:
    app: grafana
  name: grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: grafana-creds
        image: docker.io/grafana/grafana:7.1.3
        imagePullPolicy: IfNotPresent
        name: grafana
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: frank-iot
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: frank-iot
  name: grafana-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    kubernetes.io/ingress.allow-http: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: grafana-iot.kapernikov.dev
    http:
      paths:
      - backend:
          serviceName: grafana
          servicePort: 80
        path: /(.*)
        pathType: ImplementationSpecific
